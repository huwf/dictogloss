version: '3'

services:
  flask:
    build: server/
    ports:
      - 127.0.0.1:5000:5000
      - 127.0.0.1:5001:443
#    expose:
#      - 5000
    restart: always
    environment:
      FLASK_ENV: development
      FLASK_RUN_HOST: 0.0.0.0
      DB_CONNECTION_STRING: "sqlite:///database.db"
      VIRTUAL_HOST: "api.localhost"
      VIRTUAL_PORT: 5000
      VIRTUAL_PROTO: http
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./server:/usr/src/server
      - ./API_KEY.json:/usr/src/API_KEY.json
      - ./server/static:/usr/src/server/static
      - ./database.db:/usr/src/database.db
#      - site:/usr/src/server
    command: python -u -m flask run

  front_end:
    restart: always
    build: front-end
    expose:
      - 8080
    ports:
      - 8080:8080
    environment:
      VIRTUAL_HOST: localhost
      VIRTUAL_PORT: 8080
      VIRTUAL_PROTO: http
      VUE_APP_API: http://localhost:5000
      NODE_ENV: development
    volumes:
      - ./front-end:/usr/src/app
    command: npm run serve

  mysql:
    restart: always
    image: mysql/mysql-server:8.0
    ports:
      - 3306:3306
    environment:
      MYSQL_USER: dictogloss
      MYSQL_PASSWORD: ${PASSWORD}
      MYSQL_DATABASE: dictogloss
    volumes:
      - database:/var/lib/mysql

# SEE: https://github.com/buchdag/letsencrypt-nginx-proxy-companion-compose/blob/master/2-containers/compose-v3/labels/docker-compose.yaml
# For examples on how to set up the letsencrypt service
#  nginx_proxy:
#    image: jwilder/nginx-proxy:alpine
#    container_name: nginx_proxy
#    volumes:
#      - conf:/etc/nginx/conf.d
#      - vhost:/etc/nginx/vhost.d
#      - html:/usr/share/nginx/html
#      - dhparam:/etc/nginx/dhparam
#      - certs:/etc/nginx/certs:ro
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#    labels:
#      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
#    ports:
#      - 80:80
#      - 443:443
#    restart: always

volumes:

  site:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  database:


